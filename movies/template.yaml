
AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: My Lambda Resources
Resources:
  GetMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovie
      Environment:
        Variables:
          USERS_TABLE: !Ref MoviesTable
      Handler: movies.getMovie
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}"
            Method: GET

  PutMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovie
      Environment:
        Variables:
          USERS_TABLE: !Ref MoviesTable
      Handler: movies.putMovie
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}"
            Method: PUT
  
  GetMovieByRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovieByRoom
      Environment:
        Variables:
          USERS_TABLE: !Ref MoviesTable
      Handler: movies.getMovieByRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movie/{movie_id}/room/{room_id}"
            Method: GET

  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: movies-app
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml

  MoviesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: movies-app
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
  